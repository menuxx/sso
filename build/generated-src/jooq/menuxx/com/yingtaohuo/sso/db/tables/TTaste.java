/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TTasteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTaste extends TableImpl<TTasteRecord> {

    private static final long serialVersionUID = -2206136;

    /**
     * The reference instance of <code>menuxx.t_taste</code>
     */
    public static final TTaste T_TASTE = new TTaste();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTasteRecord> getRecordType() {
        return TTasteRecord.class;
    }

    /**
     * The column <code>menuxx.t_taste.id</code>.
     */
    public final TableField<TTasteRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_taste.corp_id</code>. 商户编号
     */
    public final TableField<TTasteRecord, Integer> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商户编号");

    /**
     * The column <code>menuxx.t_taste.content</code>. 口味内容
     */
    public final TableField<TTasteRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "口味内容");

    /**
     * Create a <code>menuxx.t_taste</code> table reference
     */
    public TTaste() {
        this("t_taste", null);
    }

    /**
     * Create an aliased <code>menuxx.t_taste</code> table reference
     */
    public TTaste(String alias) {
        this(alias, T_TASTE);
    }

    private TTaste(String alias, Table<TTasteRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTaste(String alias, Table<TTasteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TTasteRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_TASTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTasteRecord> getPrimaryKey() {
        return Keys.KEY_T_TASTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTasteRecord>> getKeys() {
        return Arrays.<UniqueKey<TTasteRecord>>asList(Keys.KEY_T_TASTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TTaste as(String alias) {
        return new TTaste(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TTaste rename(String name) {
        return new TTaste(name, null);
    }
}

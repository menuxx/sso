/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TOrderRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 订单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrder extends TableImpl<TOrderRecord> {

    private static final long serialVersionUID = 950153678;

    /**
     * The reference instance of <code>menuxx.t_order</code>
     */
    public static final TOrder T_ORDER = new TOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderRecord> getRecordType() {
        return TOrderRecord.class;
    }

    /**
     * The column <code>menuxx.t_order.id</code>.
     */
    public final TableField<TOrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_order.user_id</code>. 用户编号
     */
    public final TableField<TOrderRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户编号");

    /**
     * The column <code>menuxx.t_order.corp_id</code>. 商家编号
     */
    public final TableField<TOrderRecord, Integer> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家编号");

    /**
     * The column <code>menuxx.t_order.order_code</code>. 订单号 日期 + 编号  2017011900000001
     */
    public final TableField<TOrderRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR.length(32).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "订单号 日期 + 编号  2017011900000001");

    /**
     * The column <code>menuxx.t_order.status</code>. 订单状态:0-待付款 1-已付款 2-已下单 3，当面结算
     */
    public final TableField<TOrderRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "订单状态:0-待付款 1-已付款 2-已下单 3，当面结算");

    /**
     * The column <code>menuxx.t_order.order_type</code>. 用餐类型:0-堂食 1-打包
     */
    public final TableField<TOrderRecord, Integer> ORDER_TYPE = createField("order_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用餐类型:0-堂食 1-打包");

    /**
     * The column <code>menuxx.t_order.pay_type</code>. 支付方式：0-微信支付 1-充值卡支付
     */
    public final TableField<TOrderRecord, Integer> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "支付方式：0-微信支付 1-充值卡支付");

    /**
     * The column <code>menuxx.t_order.table_id</code>. 桌号
     */
    public final TableField<TOrderRecord, Integer> TABLE_ID = createField("table_id", org.jooq.impl.SQLDataType.INTEGER, this, "桌号");

    /**
     * The column <code>menuxx.t_order.address_id</code>. 收货地址
     */
    public final TableField<TOrderRecord, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER, this, "收货地址");

    /**
     * The column <code>menuxx.t_order.queue_id</code>. 排序号
     */
    public final TableField<TOrderRecord, Integer> QUEUE_ID = createField("queue_id", org.jooq.impl.SQLDataType.INTEGER, this, "排序号");

    /**
     * The column <code>menuxx.t_order.total_amount</code>. 总金额(分)
     */
    public final TableField<TOrderRecord, Integer> TOTAL_AMOUNT = createField("total_amount", org.jooq.impl.SQLDataType.INTEGER, this, "总金额(分)");

    /**
     * The column <code>menuxx.t_order.pay_amount</code>. 支付金额(分)
     */
    public final TableField<TOrderRecord, Integer> PAY_AMOUNT = createField("pay_amount", org.jooq.impl.SQLDataType.INTEGER, this, "支付金额(分)");

    /**
     * The column <code>menuxx.t_order.package_amount</code>. 餐盒费
     */
    public final TableField<TOrderRecord, Integer> PACKAGE_AMOUNT = createField("package_amount", org.jooq.impl.SQLDataType.INTEGER, this, "餐盒费");

    /**
     * The column <code>menuxx.t_order.delivery_amount</code>. 配送费
     */
    public final TableField<TOrderRecord, Integer> DELIVERY_AMOUNT = createField("delivery_amount", org.jooq.impl.SQLDataType.INTEGER, this, "配送费");

    /**
     * The column <code>menuxx.t_order.remark</code>. 备注
     */
    public final TableField<TOrderRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "备注");

    /**
     * The column <code>menuxx.t_order.apply_activities</code>. 参与的活动
     */
    public final TableField<TOrderRecord, String> APPLY_ACTIVITIES = createField("apply_activities", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "参与的活动");

    /**
     * The column <code>menuxx.t_order.order_times</code>. 下单次数
     */
    public final TableField<TOrderRecord, Integer> ORDER_TIMES = createField("order_times", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "下单次数");

    /**
     * The column <code>menuxx.t_order.transport_status</code>. 外卖单派送状态 0, 未发生派送，1已发生派送
     */
    public final TableField<TOrderRecord, Integer> TRANSPORT_STATUS = createField("transport_status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "外卖单派送状态 0, 未发生派送，1已发生派送");

    /**
     * The column <code>menuxx.t_order.create_time</code>. 创建时间
     */
    public final TableField<TOrderRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>menuxx.t_order</code> table reference
     */
    public TOrder() {
        this("t_order", null);
    }

    /**
     * Create an aliased <code>menuxx.t_order</code> table reference
     */
    public TOrder(String alias) {
        this(alias, T_ORDER);
    }

    private TOrder(String alias, Table<TOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrder(String alias, Table<TOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "订单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderRecord>>asList(Keys.KEY_T_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrder as(String alias) {
        return new TOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrder rename(String name) {
        return new TOrder(name, null);
    }
}

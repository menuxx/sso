/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TItemRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 品类表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TItem extends TableImpl<TItemRecord> {

    private static final long serialVersionUID = -1731581082;

    /**
     * The reference instance of <code>menuxx.t_item</code>
     */
    public static final TItem T_ITEM = new TItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TItemRecord> getRecordType() {
        return TItemRecord.class;
    }

    /**
     * The column <code>menuxx.t_item.id</code>.
     */
    public final TableField<TItemRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_item.corp_id</code>. 商家编号
     */
    public final TableField<TItemRecord, Integer> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家编号");

    /**
     * The column <code>menuxx.t_item.item_name</code>. 产品名称：豆浆
     */
    public final TableField<TItemRecord, String> ITEM_NAME = createField("item_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "产品名称：豆浆");

    /**
     * The column <code>menuxx.t_item.item_desc</code>. 产品描述：可为空
     */
    public final TableField<TItemRecord, String> ITEM_DESC = createField("item_desc", org.jooq.impl.SQLDataType.VARCHAR.length(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "产品描述：可为空");

    /**
     * The column <code>menuxx.t_item.category_id</code>. 分类ID
     */
    public final TableField<TItemRecord, Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "分类ID");

    /**
     * The column <code>menuxx.t_item.product_price</code>. 价格（单位：分）
     */
    public final TableField<TItemRecord, Integer> PRODUCT_PRICE = createField("product_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "价格（单位：分）");

    /**
     * The column <code>menuxx.t_item.discount_price</code>. 折扣价
     */
    public final TableField<TItemRecord, Integer> DISCOUNT_PRICE = createField("discount_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "折扣价");

    /**
     * The column <code>menuxx.t_item.special_price</code>. 特价
     */
    public final TableField<TItemRecord, Integer> SPECIAL_PRICE = createField("special_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "特价");

    /**
     * The column <code>menuxx.t_item.weekday</code>. 周几：1-7
     */
    public final TableField<TItemRecord, Integer> WEEKDAY = createField("weekday", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "周几：1-7");

    /**
     * The column <code>menuxx.t_item.soldout</code>. 是否下架：1 已下架 0 未下架
     */
    public final TableField<TItemRecord, Integer> SOLDOUT = createField("soldout", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否下架：1 已下架 0 未下架");

    /**
     * The column <code>menuxx.t_item.sort_id</code>. 排序号
     */
    public final TableField<TItemRecord, Integer> SORT_ID = createField("sort_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("999", org.jooq.impl.SQLDataType.INTEGER)), this, "排序号");

    /**
     * The column <code>menuxx.t_item.format_id</code>. 关联规格
     */
    public final TableField<TItemRecord, Integer> FORMAT_ID = createField("format_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "关联规格");

    /**
     * The column <code>menuxx.t_item.bar_code</code>. 条形码
     */
    public final TableField<TItemRecord, String> BAR_CODE = createField("bar_code", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "条形码");

    /**
     * The column <code>menuxx.t_item.item_code</code>. 商品编码
     */
    public final TableField<TItemRecord, String> ITEM_CODE = createField("item_code", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "商品编码");

    /**
     * The column <code>menuxx.t_item.suppliers</code>. 供应商
     */
    public final TableField<TItemRecord, String> SUPPLIERS = createField("suppliers", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "供应商");

    /**
     * The column <code>menuxx.t_item.package_flag</code>. 是否需要打包盒
     */
    public final TableField<TItemRecord, Integer> PACKAGE_FLAG = createField("package_flag", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否需要打包盒");

    /**
     * The column <code>menuxx.t_item.thumbnails</code>. 缩略图
     */
    public final TableField<TItemRecord, String> THUMBNAILS = createField("thumbnails", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "缩略图");

    /**
     * The column <code>menuxx.t_item.cover_images</code>. 大图
     */
    public final TableField<TItemRecord, String> COVER_IMAGES = createField("cover_images", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "大图");

    /**
     * The column <code>menuxx.t_item.join_act_minus</code>. 是否参加满减
     */
    public final TableField<TItemRecord, Integer> JOIN_ACT_MINUS = createField("join_act_minus", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否参加满减");

    /**
     * The column <code>menuxx.t_item.offline</code>. 是否下线：1 已下线 0 未下线
     */
    public final TableField<TItemRecord, Integer> OFFLINE = createField("offline", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否下线：1 已下线 0 未下线");

    /**
     * The column <code>menuxx.t_item.create_time</code>. 创建时间
     */
    public final TableField<TItemRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>menuxx.t_item</code> table reference
     */
    public TItem() {
        this("t_item", null);
    }

    /**
     * Create an aliased <code>menuxx.t_item</code> table reference
     */
    public TItem(String alias) {
        this(alias, T_ITEM);
    }

    private TItem(String alias, Table<TItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private TItem(String alias, Table<TItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "品类表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TItemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TItemRecord> getPrimaryKey() {
        return Keys.KEY_T_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TItemRecord>> getKeys() {
        return Arrays.<UniqueKey<TItemRecord>>asList(Keys.KEY_T_ITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TItem as(String alias) {
        return new TItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TItem rename(String name) {
        return new TItem(name, null);
    }
}

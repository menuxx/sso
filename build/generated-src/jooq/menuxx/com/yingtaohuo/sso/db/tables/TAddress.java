/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TAddressRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAddress extends TableImpl<TAddressRecord> {

    private static final long serialVersionUID = 1417085441;

    /**
     * The reference instance of <code>menuxx.t_address</code>
     */
    public static final TAddress T_ADDRESS = new TAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAddressRecord> getRecordType() {
        return TAddressRecord.class;
    }

    /**
     * The column <code>menuxx.t_address.id</code>.
     */
    public final TableField<TAddressRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_address.user_id</code>. 用户编号
     */
    public final TableField<TAddressRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户编号");

    /**
     * The column <code>menuxx.t_address.linkman</code>. 联系人
     */
    public final TableField<TAddressRecord, String> LINKMAN = createField("linkman", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "联系人");

    /**
     * The column <code>menuxx.t_address.phone</code>. 手机号
     */
    public final TableField<TAddressRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "手机号");

    /**
     * The column <code>menuxx.t_address.address</code>. 地址
     */
    public final TableField<TAddressRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "地址");

    /**
     * The column <code>menuxx.t_address.removed</code>. 已删除
     */
    public final TableField<TAddressRecord, Integer> REMOVED = createField("removed", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "已删除");

    /**
     * The column <code>menuxx.t_address.lng</code>. 经度坐标（火星坐标）
     */
    public final TableField<TAddressRecord, BigDecimal> LNG = createField("lng", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 7).defaultValue(org.jooq.impl.DSL.inline("120.1645910", org.jooq.impl.SQLDataType.DECIMAL)), this, "经度坐标（火星坐标）");

    /**
     * The column <code>menuxx.t_address.lat</code>. 纬度坐标（火星坐标）
     */
    public final TableField<TAddressRecord, BigDecimal> LAT = createField("lat", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 7).defaultValue(org.jooq.impl.DSL.inline("30.1863390", org.jooq.impl.SQLDataType.DECIMAL)), this, "纬度坐标（火星坐标）");

    /**
     * Create a <code>menuxx.t_address</code> table reference
     */
    public TAddress() {
        this("t_address", null);
    }

    /**
     * Create an aliased <code>menuxx.t_address</code> table reference
     */
    public TAddress(String alias) {
        this(alias, T_ADDRESS);
    }

    private TAddress(String alias, Table<TAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private TAddress(String alias, Table<TAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TAddressRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAddressRecord> getPrimaryKey() {
        return Keys.KEY_T_ADDRESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAddressRecord>> getKeys() {
        return Arrays.<UniqueKey<TAddressRecord>>asList(Keys.KEY_T_ADDRESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAddress as(String alias) {
        return new TAddress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TAddress rename(String name) {
        return new TAddress(name, null);
    }
}

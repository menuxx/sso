/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUser extends TableImpl<TUserRecord> {

    private static final long serialVersionUID = 1085494356;

    /**
     * The reference instance of <code>menuxx.t_user</code>
     */
    public static final TUser T_USER = new TUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserRecord> getRecordType() {
        return TUserRecord.class;
    }

    /**
     * The column <code>menuxx.t_user.id</code>.
     */
    public final TableField<TUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_user.openid</code>. OPEN_ID
     */
    public final TableField<TUserRecord, String> OPENID = createField("openid", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "OPEN_ID");

    /**
     * The column <code>menuxx.t_user.corp_id</code>. 商家编号
     */
    public final TableField<TUserRecord, Integer> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家编号");

    /**
     * The column <code>menuxx.t_user.nick_name</code>.
     */
    public final TableField<TUserRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>menuxx.t_user.avatar_url</code>. 头像
     */
    public final TableField<TUserRecord, String> AVATAR_URL = createField("avatar_url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "头像");

    /**
     * The column <code>menuxx.t_user.gender</code>. 性别:0：未知、1：男、2：女 
     */
    public final TableField<TUserRecord, Short> GENDER = createField("gender", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "性别:0：未知、1：男、2：女 ");

    /**
     * The column <code>menuxx.t_user.province</code>. 省份
     */
    public final TableField<TUserRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "省份");

    /**
     * The column <code>menuxx.t_user.city</code>. 城市
     */
    public final TableField<TUserRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "城市");

    /**
     * The column <code>menuxx.t_user.country</code>. 国家
     */
    public final TableField<TUserRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "国家");

    /**
     * The column <code>menuxx.t_user.balance</code>. 充值余额，单位：分
     */
    public final TableField<TUserRecord, Integer> BALANCE = createField("balance", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "充值余额，单位：分");

    /**
     * The column <code>menuxx.t_user.create_time</code>. 创建时间
     */
    public final TableField<TUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>menuxx.t_user.consumed</code>. 是否消费过
     */
    public final TableField<TUserRecord, Integer> CONSUMED = createField("consumed", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否消费过");

    /**
     * Create a <code>menuxx.t_user</code> table reference
     */
    public TUser() {
        this("t_user", null);
    }

    /**
     * Create an aliased <code>menuxx.t_user</code> table reference
     */
    public TUser(String alias) {
        this(alias, T_USER);
    }

    private TUser(String alias, Table<TUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUser(String alias, Table<TUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserRecord> getPrimaryKey() {
        return Keys.KEY_T_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserRecord>>asList(Keys.KEY_T_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(String alias) {
        return new TUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUser rename(String name) {
        return new TUser(name, null);
    }
}

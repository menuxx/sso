/*
 * This file is generated by jOOQ.
*/
package com.yingtaohuo.sso.db.tables;


import com.yingtaohuo.sso.db.Keys;
import com.yingtaohuo.sso.db.Menuxx;
import com.yingtaohuo.sso.db.tables.records.TCategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 产品分类表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCategory extends TableImpl<TCategoryRecord> {

    private static final long serialVersionUID = -335025183;

    /**
     * The reference instance of <code>menuxx.t_category</code>
     */
    public static final TCategory T_CATEGORY = new TCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCategoryRecord> getRecordType() {
        return TCategoryRecord.class;
    }

    /**
     * The column <code>menuxx.t_category.id</code>.
     */
    public final TableField<TCategoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>menuxx.t_category.corp_id</code>. 商家编号
     */
    public final TableField<TCategoryRecord, Integer> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.INTEGER, this, "商家编号");

    /**
     * The column <code>menuxx.t_category.category_name</code>. 分类名称
     */
    public final TableField<TCategoryRecord, String> CATEGORY_NAME = createField("category_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分类名称");

    /**
     * The column <code>menuxx.t_category.category_icon</code>.
     */
    public final TableField<TCategoryRecord, String> CATEGORY_ICON = createField("category_icon", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>menuxx.t_category.sort_id</code>. 排序号
     */
    public final TableField<TCategoryRecord, Integer> SORT_ID = createField("sort_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("999", org.jooq.impl.SQLDataType.INTEGER)), this, "排序号");

    /**
     * The column <code>menuxx.t_category.create_time</code>. 创建时间
     */
    public final TableField<TCategoryRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>menuxx.t_category</code> table reference
     */
    public TCategory() {
        this("t_category", null);
    }

    /**
     * Create an aliased <code>menuxx.t_category</code> table reference
     */
    public TCategory(String alias) {
        this(alias, T_CATEGORY);
    }

    private TCategory(String alias, Table<TCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCategory(String alias, Table<TCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "产品分类表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Menuxx.MENUXX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCategoryRecord> getPrimaryKey() {
        return Keys.KEY_T_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<TCategoryRecord>>asList(Keys.KEY_T_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCategory as(String alias) {
        return new TCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCategory rename(String name) {
        return new TCategory(name, null);
    }
}
